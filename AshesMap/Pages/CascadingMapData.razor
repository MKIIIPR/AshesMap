@using System.Collections.Generic
@using AshesMapBib.Models


<CascadingValue Value="this">
    @ChildContent
</CascadingValue>

@code {
    // List von ResourcePositionen, die die Daten enthalten
    public List<NodePosition> NodeSpots { get; set; } = new List<NodePosition>();
    public List<Node> Nodes { get; set; } = new List<Node>();
    [Parameter] public RenderFragment ChildContent { get; set;  }

    public string ResType { get; set; } = "";
    // Methode zum Hinzufügen einer neuen ResourcePosition

    public void AddResourcePosition(NodePosition resource)
    {

        NodeSpots.Add(resource);
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        InitResourceList();
        base.OnInitialized();
    }
    public List<Node> ReNode{get; set; } = new();
    private void InitResourceList()
    {
        Nodes.Add(new Node { Type = "metal", RespawnTimer = 120, Name = "Copper" });
        Nodes.Add(new Node { Type = "metal", RespawnTimer = 120, Name = "Zink" });
        Nodes.Add(new Node { Type = "metal", RespawnTimer = 120, Name = "Tin" });
        Nodes.Add(new Node { Type = "metal", RespawnTimer = 120, Name = "Iron" });
        Nodes.Add(new Node { Type = "metal", RespawnTimer = 120, Name = "Rividium" });
        Nodes.Add(new Node { Type = "wood", RespawnTimer = 240, Name = "Wieping Willow" });
        Nodes.Add(new Node {  Type = "wood", RespawnTimer = 240, Name = "BraidWood" });
        Nodes.Add(new Node {  Type = "gem", RespawnTimer = 120, Name = "Rubi" });
        Nodes.Add(new Node {  Type = "gem", RespawnTimer = 120, Name = "Saphire" });
        Nodes.Add(new Node {  Type = "gem", RespawnTimer = 120, Name = "Halcyonite" });
        Nodes.Add(new Node {  Type = "gem", RespawnTimer = 120, Name = "Lumadon" });
        Nodes.Add(new Node {  Type = "npc", RespawnTimer = 120, Name = "" });
    }
}
